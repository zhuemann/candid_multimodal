from utility import rle_decode, mask2rle, rle_decode_modified
import os
import matplotlib.pyplot as plt
import numpy as np
import pydicom as pdcm

def make_plots():
    pneumo = "606355 2 1020 8 1015 12 1011 12 1010 14 1009 15 1008 16 1007 17 1006 18 1005 19 1004 20 1003 21 1003 20 1003 21 1003 21 1002 22 1002 21 1002 22 1002 22 1001 23 1001 22 1001 23 1001 23 1001 23 1000 24 1000 23 1000 24 1000 24 1000 24 999 24 1000 24 1000 24 999 25 999 24 1000 24 999 25 999 25 999 24 1000 24 1000 24 1000 24 1000 24 1000 23 1000 24 1000 24 1000 24 1000 24 1000 24 1000 24 1000 24 1000 24 1000 24 999 25 999 25 999 25 999 25 999 25 999 25 999 25 999 25 999 25 999 25 999 25 999 25 999 25 999 25 999 26 998 26 998 26 998 26 999 25 999 26 998 26 998 26 998 26 998 27 997 27 997 27 997 27 998 27 997 27 997 27 997 27 998 27 997 27 997 28 996 28 997 28 996 28 996 29 995 29 996 29 995 29 995 29 995 30 995 29 995 30 994 30 995 29 995 30 995 29 995 30 994 30 995 30 994 31 994 30 995 30 994 30 995 30 995 29 995 30 995 29 996 29 995 29 996 29 996 29 995 29 996 29 996 29 995 29 996 29 996 29 995 29 996 29 995 29 996 29 996 28 996 29 996 28 997 28 996 28 997 27 998 27 998 26 998 27 998 26 999 25 999 26 999 25 1000 25 1000 24 1001 24 1001 23 1001 24 1001 23 1002 23 1002 22 1003 21 1004 21 1004 20 1005 20 1005 19 1006 18 1008 17 1008 16 1009 16 1010 14 1011 14 1011 14 1012 12 1013 12 1013 12 1013 11 1014 11 1014 11 1015 9 1016 9 1016 9 1016 9 1016 9 1016 9 1016 9 1016 9 1016 9 1016 10 1015 10 1015 10 1015 11 1014 11 1014 12 1013 12 1014 12 1013 13 1012 13 1013 13 1013 12 1014 11 1015 11 1015 10 1015 10 1016 9 1016 10 1015 10 1016 9 1016 10 1016 9 1016 9 1016 10 1016 9 1016 10 1016 10 1015 11 1014 12 1014 12 1013 13 1012 14 1011 16 1010 16 1009 18 1007 19 1006 20 1006 20 1006 20 1006 19 1007 19 1007 18 1008 18 1008 18 1008 18 1009 17 1009 18 1009 18 1009 17 1009 18 1009 20 1007 24 1002 26 1001 27 1000 26 1000 27 1000 27 1000 26 1000 27 1000 26 1001 25 1001 25 1003 23 1005 20 1008 18 1010 16 1013 13 1015 10"
    rib1 = "768197 60 964 60 964 60 964 60 964 60 964 60 964 60 964 60 964 60 964 60 964 60 964 60 964 60 964 60 964 60 964 60 964 60 964 60 964 60 964 60 964 60 964 60 964 60 964 60 964 60 964 60 964 60 964 60 964 60 964 60 964 60 964 60 964 60 964 60 964 60 964 60 964 60 964 60 964 60 964 60 964 60 964 60 964 60 964 60 964 60 964 60 964 60 964 60 964 60 964 60 964 60 964 60 964 60 964 60 964 60 964 60 964 60 964 60"
    rib2 = "778505 69 955 69 955 69 955 69 955 69 955 69 955 69 955 69 955 69 955 69 955 69 955 69 955 69 955 69 955 69 955 69 955 69 955 69 955 69 955 69 955 69 955 69 955 69 955 69 955 69 955 69 955 69 955 69 955 69 955 69 955 69 955 69 955 69 955 69 955 69 955 69 955 69 955 69 955 69 955 69 955 69 955 69 955 69 955 69 955 69 955 69 955 69 955 69 955 69 955 69 955 69 955 69 955 69 955 69 955 69 955 69 955 69 955 69 955 69"
    rib3 = "780636 64 960 64 960 64 960 64 960 64 960 64 960 64 960 64 960 64 960 64 960 64 960 64 960 64 960 64 960 64 960 64 960 64 960 64 960 64 960 64 960 64 960 64 960 64 960 64 960 64 960 64 960 64 960 64 960 64 960 64 960 64 960 64 960 64 960 64 960 64 960 64 960 64 960 64 960 64 960 64 960 64 960 64 960 64 960 64"
    tube = "795213 19 1004 1 18 1 1004 1 18 1 1003 1 19 1 1003 1 19 1 1002 1 20 1 1002 1 20 1 1001 1 21 1 1001 1 21 1 1000 1 22 1 1000 1 22 1 999 1 23 1 999 1 23 1 998 1 24 1 998 1 24 1 997 1 25 1 997 1 25 1 996 1 26 1 996 1 26 1 995 1 27 1 995 1 27 1 994 1 28 1 994 1 28 1 994 1 28 1 994 1 28 1 994 1 27 1 995 1 26 1 996 1 25 1 997 1 25 1 997 1 24 1 998 1 23 1 999 1 22 1 1000 1 21 1 1001 1 20 1 1002 1 20 1 1002 1 19 1 1003 1 18 1 1004 1 17 1 1005 1 16 1 929 2 75 1 15 1 932 4 71 1 15 1 936 4 67 1 14 1 941 4 63 1 13 1 946 4 59 1 12 1 951 4 55 1 11 1 956 4 51 1 10 1 961 4 48 1 9 1 965 4 44 1 8 1 970 3 41 1 7 1 974 2 39 1 5 2 977 2 37 1 3 2 981 1 37 3 984 2 34 2 988 2 29 3 1 1 990 1 26 2 4 1 991 2 22 2 6 1 993 2 18 2 9 1 994 2 13 3 11 1 996 1 10 2 14 1 997 2 6 2 16 1 999 2 2 2 18 1 1001 2 21 1 1023 1 1023 1 1023 1 1023 1 1024 1 1023 1 1023 1 1023 1 1023 1 1024 1 1023 1 1023 1 1023 1 1023 1 1024 1 1023 1 1023 1 1023 1 1023 1 1023 1 1024 1 1023 1 1023 1 1023 1 1023 1 1024 1 1023 1 1023 1 1023 1 1024 1 1023 1 1023 1 1023 1 1024 1 1023 1 1023 1 1024 1 1023 1 1023 1 1023 1 1024 1 1023 1 1023 1 1024 1 1023 1 1023 1 1023 1 1024 1 1023 1 1024 1 1023 1 1024 1 1023 1 1024 1 1023 1 1024 1 1024 1 1023 1 1024 1 1023 1 1024 1 1023 1 1024 1 1023 1 1024 3 1024 4 1024 5 1024 4 1024 5 1024 5 1024 4 1024 5 1024 5 1024 6 1024 5 1024 5 1024 5 1024 6 1024 5 1024 6 1024 6 1024 6 1024 7 1024 6 1024 6 1024 7 1024 6 1024 6 1024 6 1024 5 1024 5 1024 5 1024 6 1024 5 1024 5 1024 5 1024 5 1024 5 1024 5 1024 5 1024 6 1024 5 1024 5 1024 5 1024 5 1024 5 1024 5 1024 5 1024 6 1024 5 1024 5 1024 5 1024 5 1024 5 1024 5 1024 6 1024 5 1024 5 1024 5 1024 5 1024 5 1024 5 1024 5 1024 6 1024 5 1024 5 1024 5 1024 3"

    mask1 = rle_decode_modified(pneumo, (1024, 1024))
    # segmentation_mask_org = np.uint8(mask1)
    mask2 = rle_decode_modified(rib1, (1024, 1024))
    mask3 = rle_decode_modified(rib2, (1024, 1024))
    mask4 = rle_decode_modified(rib3, (1024, 1024))
    mask5 = rle_decode_modified(tube, (1024, 1024))
    mask_tot = mask1 + mask2 + mask3 + mask4 + (mask5 * 3)

    data_path = "Z:/public_datasets/candid_ptx/dataset1/dataset/"
    img_name = "1.8.41.365353.95.9.1.9.821105879412437.5884218228236.5"
    img_path = os.path.join(data_path, img_name)
    DCM_Img = pdcm.read_file(img_path)
    img_raw = DCM_Img.pixel_array
    img_raw = img_raw * (255 / np.amax(img_raw))  # puts the highest value at 255
    img_raw = np.uint8(img_raw)

    f, ax = plt.subplots(1, 3)
    ax[0].imshow(img_raw, cmap=plt.cm.bone)
    ax[0].set_title('Chest X-ray', size=20)
    ax[1].imshow(mask_tot, cmap=plt.cm.bone)
    ax[1].set_title('Physician Segmentation', size=20)
    ax[2].imshow(mask_tot, cmap="jet", alpha=1)
    # ax[2].title.set_text('Segmentation on X-Ray', size=10)
    ax[2].set_title('Segmentation on X-Ray', size=20)
    ax[2].imshow(img_raw, cmap=plt.cm.bone, alpha=.5)

    ax[0].axes.xaxis.set_visible(False)
    ax[0].axes.yaxis.set_visible(False)
    ax[1].axes.xaxis.set_visible(False)
    ax[1].axes.yaxis.set_visible(False)
    ax[2].axes.xaxis.set_visible(False)
    ax[2].axes.yaxis.set_visible(False)
    plt.show()