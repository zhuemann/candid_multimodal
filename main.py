

from training_loop import training_loop
import pandas as pd
import os
from utility import rle_decode, mask2rle, rle_decode_modified
import matplotlib.pyplot as plt
import numpy as np


# Press the green button in the gutter to run the script.
if __name__ == '__main__':

    string = "561281 9 1011 11 1007 14 1003 19 1001 19 999 21 997 25 996 27 994 29 993 29 993 30 993 30 993 30 992 31 992 30 993 30 993 30 994 29 994 29 994 29 994 28 996 27 996 27 996 27 997 26 997 26 997 26 998 25 998 25 999 24 1000 24 999 24 1000 24 999 24 1000 24 1000 23 1000 24 1000 23 1001 23 1000 24 1000 23 1000 24 1000 23 1001 23 1000 24 1000 23 1001 23 1001 23 1000 23 1001 23 1001 22 1002 22 1001 23 1001 22 1002 22 1002 22 1002 22 1002 21 1003 21 1003 21 1003 21 1002 21 1003 21 1003 21 1003 20 1003 21 1003 20 1004 20 1004 20 1003 20 1005 19 1005 19 1005 19 1005 18 1006 18 1006 18 1006 18 1006 18 1006 17 1008 16 1008 16 1008 16 1008 16 1008 16 1008 16 1008 16 1008 16 1009 15 1009 15 1009 15 1009 15 1010 14 1010 14 1010 14 1010 15 1009 15 1010 14 1010 15 1009 15 1009 16 1008 16 1008 16 1008 17 1007 17 1008 16 1008 16 1008 16 1008 16 1009 15 1009 15 1009 16 1008 16 1008 16 1009 15 1010 14 1010 14 1011 13 1012 12 1012 12 1013 11 1014 10 1014 10 1015 9 1015 9 1016 8 1016 8 1017 7 1017 8 1017 7 1018 6 1018 7 1018 6 1019 6 1018 6 1019 5 1020 5 1020 4 1020 4 1021 3 1022 2 1022 2 1023 1"
    string2 = "259379 7 1012 15 1005 18 1002 20 1002 21 1001 22 1000 22 1000 23 1000 23 999 24 999 24 999 23 1000 22 1001 22 1001 22 1000 23 1000 23 1000 22 1000 23 999 24 998 24 998 25 997 26 996 27 996 27 996 27 996 26 997 26 997 26 997 26 996 27 995 27 996 26 997 26 997 26 997 26 997 26 997 25 998 24 999 24 998 24 999 24 999 23 999 23 1000 23 1000 22 1001 22 1001 21 1002 20 1003 19 1005 18 1005 18 1005 18 1005 17 1006 17 1006 17 1006 17 1006 17 1005 18 1005 17 1006 17 1007 16 1007 17 1006 17 1006 18 1005 18 1005 17 1006 17 1006 17 1006 17 1006 17 1006 17 1007 16 1007 17 1006 17 1006 17 1006 17 1006 17 1006 17 1006 17 1006 18 1005 18 1006 17 1006 18 1006 17 1006 18 1006 17 1006 17 1006 18 1006 17 1006 17 1006 18 1006 17 1006 18 1005 18 1006 18 1005 18 1006 18 1005 19 1004 19 1005 19 1004 20 1003 21 1003 20 1004 20 1003 21 1003 21 1002 22 1001 22 1001 23 1000 24 1000 24 999 24 1000 24 999 25 999 25 998 26 998 25 998 26 998 25 998 26 997 26 998 26 997 26 998 26 998 25 998 26 998 25 998 26 997 27 997 26 997 27 997 26 998 26 998 25 999 25 999 25 998 26 998 26 998 25 998 26 998 26 998 26 997 27 997 27 997 27 997 27 997 27 996 27 997 27 997 27 997 27 997 27 997 27 997 27 997 27 997 28 996 28 996 29 994 30 994 31 993 31 993 31 993 31 993 32 992 33 991 33 991 34 990 35 989 36 989 35 989 36 988 37 987 39 985 40 985 40 984 40 984 41 983 42 982 42 982 43 981 43 981 44 980 45 979 45 980 45 979 46 979 46 978 47 978 47 977 47 978 47 977 47 977 48 977 47 977 48 976 49 975 49 975 50 975 49 975 50 975 49 975 50 974 50 975 50 974 51 974 51 973 51 974 51 973 52 973 52 972 53 972 53 971 54 971 53 971 54 971 54 970 55 970 56 969 56 968 56 969 56 969 55 969 56 969 56 969 56 969 57 968 58 967 60 964 64 961 66 959 63 961 57 968 52 974 48 977 45 981 41 985 36 990 31 995 27 1000 23 1004 19 1007 15 1012 11 1015 7 1020 2"
    #string3 = "293157 10000 1021 2 1020 4 1018 6 1016 8 1014 9 1013 11 1011 12 1011 12 1011 13 1010 13 1009 14 1009 14 1009 14 1009 15 1008 15 1008 15 1007 16 1007 16 1007 17 1006 17 1006 17 1007 17 1006 17 1006 17 1006 17 1006 18 1005 18 1006 17 1006 18 1005 18 1006 17 1006 18 1005 18 1005 19 1005 18 1005 19 1004 19 1005 19 1004 19 1004 20 1003 20 1004 19 1004 20 1003 20 1004 20 1003 20 1003 21 1002 21 1003 21 1002 21 1002 22 1002 21 1002 22 1001 22 1001 23 1001 22 1001 23 1000 23 1001 23 1000 23 1000 24 999 24 1000 24 999 24 999 25 999 25 998 25 998 26 998 25 998 26 998 25 998 26 998 25 998 26 998 25 998 26 998 25 998 26 998 26 997 26 997 27 997 26 997 27 997 27 996 27 997 27 996 28 996 27 996 28 996 28 995 28 996 28 995 29 995 28 995 29 994 30 994 29 994 30 994 29 994 30 994 30 993 30 994 30 993 31 993 30 993 31 993 30 993 31 993 31 992 31 993 31 992 32 992 31 992 32 992 31 993 31 992 32 992 31 992 32 992 32 992 31 992 32 992 31 993 31 993 31 992 31 993 31 993 31 993 31 992 31 993 31 993 31 993 31 993 30 994 30 994 30 994 30 994 29 994 30 994 30 994 30 994 29 995 29 995 29 995 29 995 29 995 29 996 28 996 28 996 28 996 28 996 28 996 28 996 28 996 28 996 28 997 27 997 27 997 27 997 27 998 27 997 27 997 28 996 28 997 28 996 28 996 29 996 28 996 29 996 28 996 29 995 30 995 29 995 30 994 30 995 30 994 30 995 30 994 30 994 31 994 30 994 31 994 30 994 31 994 30 994 31 994 31 993 31 994 31 994 30 994 31 994 30 995 30 994 30 995 30 995 29 996 29 995 30 995 29 996 29 995 30 995 29 996 29 996 29 996 28 998 26 999 26 999 25 1000 25 1001 23 1003 21 1005 20 1006 17 1009 15 1011 12 1014 10 1016 8 1019 4 1022 2"
    string4 = "293056 2 1019 5 1018 6 1018 6 1017 7 1016 8 1015 8 1015 9 1014 10 1014 10 1013 10 1014 10 1013 11 1012 12 1012 12 1011 12 1011 13 1011 12 1011 13 1010 13 1010 14 1010 14 1009 15 1008 16 1008 15 1008 16 1008 15 1008 16 1007 16 1008 16 1007 17 1006 18 1006 17 1006 18 1006 17 1006 18 1006 18 1005 18 1006 18 1005 18 1006 18 1005 18 1006 18 1005 19 1005 19 1004 19 1005 19 1004 19 1005 19 1005 18 1006 18 1005 18 1006 18 1006 17 1006 18 1006 18 1005 19 1005 18 1006 18 1006 17 1007 17 1007 16 1008 16 1008 15 1009 15 1008 15 1009 15 1009 14 1010 14 1010 14 1009 14 1010 14 1010 14 1010 14 1010 14 1009 14 1010 14 1010 14 1010 14 1010 14 1009 15 1009 15 1009 15 1009 15 1009 14 1009 15 1009 15 1009 15 1009 15 1009 15 1008 16 1008 16 1008 16 1008 16 1008 15 1009 15 1009 15 1009 16 1008 15 1009 15 1010 14 1010 14 1010 14 1010 13 1011 13 1012 12 1012 12 1012 12 1012 12 1012 12 1013 11 1013 11 1013 11 1013 10 1014 10 1015 9 1015 10 1014 9 1015 9 1015 9 1016 8 1016 8 1017 7 1017 7 1018 6 1018 6 1019 5 1019 5 1020 4 1020 4 1020 5 1019 5 1020 4 1020 5 1020 4 1020 5 1019 5 1020 4 1020 4 1020 5 1019 5 1020 4 1020 4 1021 3 1021 4 1021 4 1020 4 1021 4 1020 5 1019 5 1020 5 1020 4 1021 4 1021 3 1022 3 1023 1 1024 1"
    string5 = "748851 48 976 48 976 48 976 48 976 48 976 48 976 48 976 48 976 48 976 48 976 48 976 48 976 48 976 48 976 48 976 48 976 48 976 48 976 48 976 48 976 48 976 48 976 48 976 48 976 48 976 48 976 48 976 48 976 48 976 48 976 48 976 48 976 48 976 48 976 48 976 48 976 48 976 48 976 48 976 48 976 48 976 48 976 48 976 48"
    string6 = "827042 42 982 42 982 42 982 42 982 42 982 42 982 42 982 42 982 42 982 42 982 42 982 42 982 42 982 42 982 42 982 42 982 42 982 42 982 42 982 42 982 42 982 42 982 42 982 42 982 42 982 42 982 42"
    #different annotations for same thing
    string7 = "846368 54 970 54 970 54 970 54 970 54 970 54 970 54 970 54 970 54 970 54 970 54 970 54 970 54 970 54 970 54 970 54 970 54 970 54 970 54 970 54 970 54 970 54 970 54 970 54 970 54 970 54 970 54 970 54 970 54 970 54 970 54 970 54 970 54 970 54 970 54 970 54 970 54 970 54 970 54 970 54 970 54 970 54 970 54 970 54 970 54 970 54 970 54 970 54"
    string8 = "822718 43 981 43 981 43 981 43 981 43 981 43 981 43 981 43 981 43 981 43 981 43 981 43 981 43 981 43 981 43 981 43 981 43 981 43 981 43 981 43 981 43 981 43 981 43 981 43 981 43 981 43 981 43 981 43 981 43 981 43 981 43 981 43 981 43 981 43 981 43 981 43 981 43 981 43 981 43 981 43 981 43 981 43 981 43 981 43"
    string9 = "807196 59 965 59 965 59 965 59 965 59 965 59 965 59 965 59 965 59 965 59 965 59 965 59 965 59 965 59 965 59 965 59 965 59 965 59 965 59 965 59 965 59 965 59 965 59 965 59 965 59 965 59 965 59 965 59 965 59 965 59 965 59 965 59 965 59 965 59 965 59"
    string10 ="851181 34 990 34 990 34 990 34 990 34 990 34 990 34 990 34 990 34 990 34 990 34 990 34 990 34 990 34 990 34 990 34 990 34 990 34 990 34 990 34 990 34 990 34 990 34 990 34 990 34 990 34 990 34 990 34 990 34"
    string11 ="860435 36 988 36 988 36 988 36 988 36 988 36 988 36 988 36 988 36 988 36 988 36 988 36 988 36 988 36 988 36 988 36 988 36 988 36 988 36 988 36 988 36 988 36 988 36 988 36 988 36 988 36"
    test_string = "250 5 10 5 5 1"
    #data = np.random.randint(0, 2, (100, 100))
    #data = np.zeros(100,100)
    #for i in range(0,100):
    #    for j in range(0,100):

    #seq = mask2rle(data)
    #print(type(seq))
    print("random sequence")
    #print(seq)



    #test_mask = rle_decode_modified(test_string, (100,100))
    #test_mask = rle_decode(string3, (1024,1024))
    #test_mask = rle_decode_modified(string11, (1024, 1024))
    #test = plt.imshow(test_mask, cmap=plt.cm.bone)
    #plt.show()

    local = True
    if local == True:
        directory_base = "Z:/"
    else:
        directory_base = "/home/zmh001/r-fcb-isilon/research/Bradshaw/"

    DGX = False
    if DGX == True:
        directory_base = "/UserData/"

    seeds = [117, 295, 98, 456, 915, 1367, 712]
    accuracy_list = []

    for seed in seeds:

        acc = training_loop(seed = seed, batch_size = 2, dir_base= directory_base, epoch = 1, n_classes = 2)
        accuracy_list.append(acc)

        matrix = acc
        df = pd.DataFrame(matrix)
        file_name = 'first_vision_run'
        ## save to xlsx file
        filepath = os.path.join(directory_base,
                                '/UserData/Zach_Analysis/result_logs/candid_result/tests/' + str(file_name) +'/confusion_matrix_seed' + str(
                                    seed) + '.xlsx')

        df.to_excel(filepath, index=False)

    print(accuracy_list)

